% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GenomeSpy.R
\name{simpleVis}
\alias{simpleVis}
\title{Creates a configuration for "simple" visualization}
\usage{
simpleVis(color = NULL, domain = NULL, colorPalette = NULL)
}
\arguments{
\item{color}{The name of the variable that is used for color mapping.
By default a default color is used for all segments.}

\item{domain}{An optional domain. By default the domain is obtained from
the data.

The domain for a continuous variable is passed as a vector
that contains the minimum and maximum values. For categorial variables
the vector should contain all categories.

This option is particularly useful in a Shiny application where the data
is filtered and the domain might change. Static domain prevents the color
mapping from going awry.}

\item{colorPalette}{An optional color palette. The palette is a vector
of #RRGGBB values, which can be be provided inline or obtained from
RColorBrewer, for example.

For continuous variables the palette must contain at least two colors -
one for the minimum value and another for the maximum value. A smooth
gradient is interpolated between those values. An arbitrary number of
intermediate colors can be provided for more expressiveness.

For categorial variables the colors are discrete and are mapped to
different categories in the same order as they are in the domain.
If the number of categories exceeds the number of colors, the colors
are re-used from the beginning.}
}
\value{
A configuration for the simple visualization
}
\description{
A simple visualization fills the segments with a color based on a variable.
The variable can be either continuous (numeric) or categorial (non-numeric).
Continuous variables are mapped to a color from a gradient. Color for
categorial variables are picked from a color palette. Sensible default
gradients and palettes are provided, but they can be overriden.
}
\examples{
simpleVis("score", domain = c(0, 50))
simpleVis("type",
          domain = c("nonsynonymous", "synonymous", "stopgain", "stoploss")
          colorPalette = c("#E41A1C", "#377EB8", "#4DAF4A", "#984EA3"))
simpleVis("type", colorPalette = RColorBrewer::brewer.pal(4, "Set1"))

}
